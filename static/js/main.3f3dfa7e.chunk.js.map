{"version":3,"sources":["Reducers/Reducerindex.js","Types/Types.js","App.js","Actions/actions.js","index.js","images/1.png"],"names":["reminders","state","action","read_cookie","type","text","date","id","Math","random","bake_cookie","console","log","filter","reminder","App","Date","render_reminders","props","className","map","key","moment","fromNow","onClick","remove_reminder","div","src","logo","alt","value","this","placeholder","onChange","e","setState","target","selected","showTimeSelect","timeFormat","dateFormat","timeCaption","add_reminder","clear_reminder","Component","connect","store","createStore","ReactDOM","render","document","getElementById","module","exports"],"mappings":"0MA2BeA,EAxBG,WAAuB,IAAtBC,EAAqB,uDAAf,GAAIC,EAAW,uCAChCF,EAAY,GAGhB,OAFAC,EAAQE,sBAAY,aCLI,iBDOpBD,EAAOE,MACPJ,EAAS,sBAAOC,GAAP,CAAc,CAAEI,KAAMH,EAAOG,KAAMC,KAAMJ,EAAOI,KAAMC,GAAIC,KAAKC,YACxEC,sBAAY,YAAaV,GACzBW,QAAQC,IAAIZ,GACLA,GCVgB,oBDWhBE,EAAOE,MACdJ,EAAYC,EAAMY,QAAO,SAAAC,GAAQ,OAAIA,EAASP,KAAOL,EAAOK,MAC5DG,sBAAY,YAAaV,GAClBA,GCbe,mBDcfE,EAAOE,MACdJ,EAAY,GACZU,sBAAY,YAAaV,GAClBA,GAGAC,G,2FEbTc,E,4MACLd,MAAQ,CACPI,KAAM,GACNC,KAAM,IAAIU,M,EAGXC,iBAAmB,WAAO,IACjBjB,EAAc,EAAKkB,MAAnBlB,UACR,OACC,wBAAImB,UAAU,cAEZnB,EAAUoB,KAAI,SAAAN,GACb,OACC,wBAAIO,IAAKP,EAASP,GAAIY,UAAU,6BAC/B,2BAAKL,EAAST,MACd,2BAAIiB,IAAOR,EAASR,MAAMiB,WAC1B,uBAAGJ,UAAU,iBAAiBK,QAAS,kBAAM,EAAKN,MAAMO,gBAAgBX,EAASP,MAAjF,W,uDASG,IAAD,OACR,OACC,yBAAKY,UAAU,OACd,yBAAKA,UAAU,aACd,yBAAKO,KAAG,EAACP,UAAY,mBACjB,yBAAKA,UAAU,GAAGQ,IAAKC,IAAMC,IAAI,SAErC,yBAAKV,UAAU,SACd,wBAAIA,UAAU,eAAd,yBAED,2BACCA,UAAU,eACVf,KAAK,OACL0B,MAAOC,KAAK9B,MAAMI,KAClB2B,YAAY,2BACZC,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAC9B,KAAM6B,EAAEE,OAAON,WAEhD,kBAAC,IAAD,CACCX,UAAU,6BACVa,YAAY,iBACZF,MAAOC,KAAK9B,MAAMK,KAClB+B,SAAUN,KAAK9B,MAAMK,KACrB2B,SAAU,SAAC3B,GAAD,OAAU,EAAK6B,SAAS,CAAC7B,UACnCgC,gBAAc,EACdC,WAAW,QACXC,WAAW,wBACXC,YAAY,SAOb,4BACCtB,UAAU,wBACVK,QAAS,WACR,EAAKN,MAAMwB,aAAa,EAAKzC,MAAMI,KAAM,EAAKJ,MAAMK,MACpD,EAAK6B,SAAS,CAAC9B,KAAM,GAAIC,KAAM,OAJjC,gBAQCyB,KAAKd,mBAEN,4BAAQE,UAAU,uBAAuBK,QAAS,WAAQ,EAAKN,MAAMyB,mBAArE,yB,GApEaC,aAuFHC,eACd,SAAA5C,GAAW,MAAO,CAAED,UAAWC,KAC/B,CAAEyC,aChGyB,SAACrC,EAAMC,GAC/B,IAAMJ,EAAS,CACXE,KFJoB,eEKpBC,OACAC,QAGJ,OADAK,QAAQC,IAAI,MAAOV,GACZA,GDyFMuB,gBCtFc,SAAClB,GAC5B,IAAML,EAAS,CACXE,KFbuB,kBEcvBG,MAGJ,OADAI,QAAQC,IAAI,SAAUV,GACfA,GDgFuByC,eC7EJ,WAI1B,MAHe,CACXvC,KFrBsB,oBC8FfyC,CAGb9B,GE1FI+B,G,cAAQC,YAAY/C,IAE1BgD,IAASC,OAAO,kBAAC,IAAD,CAAUH,MAAOA,GAAO,kBAAC,EAAD,OAAoBI,SAASC,eAAe,U,mBCXpFC,EAAOC,QAAU,IAA0B,+B","file":"static/js/main.3f3dfa7e.chunk.js","sourcesContent":["import { ADD_REMINDER, REMOVE_REMINDER, CLEAR_REMINDER } from '../Types/Types'\r\nimport { bake_cookie, read_cookie } from 'sfcookies'\r\n\r\nconst reminders = (state=[], action) => {\r\n    let reminders = [];\r\n    state = read_cookie(\"reminders\")\r\n\r\n    if (action.type === ADD_REMINDER) {\r\n        reminders = [...state, { text: action.text, date: action.date, id: Math.random() }]\r\n        bake_cookie(\"reminders\", reminders)\r\n        console.log(reminders)\r\n        return reminders\r\n    } else if (action.type === REMOVE_REMINDER) {\r\n        reminders = state.filter(reminder => reminder.id !== action.id)\r\n        bake_cookie(\"reminders\", reminders)\r\n        return reminders\r\n    } else if (action.type === CLEAR_REMINDER) {\r\n        reminders = []\r\n        bake_cookie(\"reminders\", reminders)\r\n        return reminders\r\n    }\r\n    else {\r\n        return state\r\n    }\r\n\r\n}\r\n\r\nexport default reminders","export const ADD_REMINDER = \"ADD_REMINDER\"\r\nexport const REMOVE_REMINDER = \"REMOVE_REMINDER\"\r\nexport const CLEAR_REMINDER = \"CLEAR_REMINDER\"","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport moment from 'moment'\r\nimport DatePicker from \"react-datepicker\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { add_reminder, remove_reminder, clear_reminder } from './Actions/actions'\r\n\r\nimport logo from \"./images/1.png\"\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\ttext: \"\",\r\n\t\tdate: new Date()\r\n\t}\r\n\r\n\trender_reminders = () => {\r\n\t\tconst { reminders } = this.props \r\n\t\treturn (\r\n\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t{\r\n\t\t\t\t\treminders.map(reminder => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={reminder.id} className=\"list-group-item text-left\" >\r\n\t\t\t\t\t\t\t\t<p >{reminder.text}</p>\r\n\t\t\t\t\t\t\t\t<p>{moment(reminder.date).fromNow()}</p>\r\n\t\t\t\t\t\t\t\t<p className=\"btn btn-danger\" onClick={() => this.props.remove_reminder(reminder.id)}>x</p>\r\n\t\t\t\t\t        </li>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div div className = \"img text-center\" >\r\n\t\t\t\t\t    <img className=\"\" src={logo} alt=\"...\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"title\">\r\n\t\t\t\t\t\t<h2 className=\"text-center\">what should you do ?</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={this.state.text}\r\n\t\t\t\t\t\tplaceholder=\"Enter what you think ...\"\r\n\t\t\t\t\t\tonChange={(e) => this.setState({text: e.target.value})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\tclassName=\"form-control input2 w-100 \"\r\n\t\t\t\t\t\tplaceholder=\"Enter Date ...\"\r\n\t\t\t\t\t\tvalue={this.state.date}\r\n\t\t\t\t\t\tselected={this.state.date}\r\n\t\t\t\t\t\tonChange={(date) => this.setState({date})}\r\n\t\t\t\t\t\tshowTimeSelect\r\n\t\t\t\t\t\ttimeFormat=\"HH:mm\"\r\n\t\t\t\t\t\tdateFormat=\"MMMM d, yyyy, h:mm aa\"\r\n\t\t\t\t\t\ttimeCaption=\"time\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* <input\r\n\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\tonChange={(e) => this.setState({date: e.target.value})}\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t/> */}\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn btn-primary w-100\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tthis.props.add_reminder(this.state.text, this.state.date)\r\n\t\t\t\t\t\t\tthis.setState({text: \"\", date: \"\"})\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>Add Reminder</button>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.render_reminders()\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<button className=\"btn btn-danger w-100\" onClick={() => { this.props.clear_reminder() }}>Clear Reminders</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// function mapDispatchToProps() {\r\n// \treturn {\r\n// \t\tadd_reminder : () => dispatchEvent(add_reminder())\r\n// \t}\r\n// }\r\n\r\n// function mapStateToProps(state) {\r\n// \treturn {\r\n\t\t\r\n// \t}\r\n// }\r\n\r\nexport default connect(\r\n\tstate => { return { reminders: state } },\r\n\t{ add_reminder, remove_reminder, clear_reminder }\r\n)(App);\r\n","import { ADD_REMINDER, REMOVE_REMINDER, CLEAR_REMINDER } from '../Types/Types'\r\n\r\nexport const add_reminder = (text, date) => {\r\n    const action = {\r\n        type: ADD_REMINDER,\r\n        text,\r\n        date\r\n    }\r\n    console.log(\"add\" ,action)\r\n    return action\r\n}\r\n\r\nexport const remove_reminder = (id) => {\r\n    const action = {\r\n        type: REMOVE_REMINDER,\r\n        id\r\n    }\r\n    console.log(\"remove\", action)\r\n    return action\r\n}\r\n\r\nexport const clear_reminder = () => {\r\n    const action = {\r\n        type: CLEAR_REMINDER\r\n    }\r\n    return action\r\n}","import React from 'react' \r\nimport ReactDOM from 'react-dom'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport reminders from './Reducers/Reducerindex'\r\nimport App from './App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css'\r\n\r\nconst store = createStore(reminders)\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById(\"root\"))","module.exports = __webpack_public_path__ + \"static/media/1.c23e8fde.png\";"],"sourceRoot":""}